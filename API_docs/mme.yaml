openapi: 3.0.0
info:
  title: Model Management API
  description: API for managing machine learning models (register, retrieve, update, delete, upload, and download).
  version: 1.1.0

servers:
  - url: http://localhost:8080
    description: Local development server

tags:
  - name: Model Management
    description: Endpoints for managing models

paths:
  /registerModel:
    post:
      tags:
        - Model Management
      summary: Register a new model
      operationId: registerModel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelInfo'
      responses:
        '200':
          description: Model registered successfully and returned object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
        '400':
          description: Invalid request, bad input data
        '500':
          description: Internal Server Error

  /getModelInfo:
    get:
      tags:
        - Model Management
      summary: Get a list of models or search by modelName and modelVersion
      operationId: getModelInfo
      parameters:
        - name: modelName
          in: query
          description: Model name to search
          required: false
          schema:
            type: string
        - name: modelVersion
          in: query
          description: Model version to search
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of models or filtered search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModelInfo'
        '400':
          description: Invalid query parameters
        '500':
          description: Internal Server Error
  /modelInfo/{id}:
    get:
      tags:
        - Model Management
      summary: Get model info by ID
      operationId: getModelInfoById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Model information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
        '404':
          description: Model not found
        '500':
          description: Internal Server Error

    put:
      tags:
        - Model Management
      summary: Update model info by ID
      operationId: updateModel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelInfo'
      responses:
        '200':
          description: Model updated successfully
        '400':
          description: Invalid request body
        '500':
          description: Internal Server Error

    delete:
      tags:
        - Model Management
      summary: Delete a model by ID
      operationId: deleteModel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Model deleted successfully
        '500':
          description: Internal Server Error
