{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ab935281_80d13aed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002149
      },
      "writtenOn": "2024-09-02T16:59:53Z",
      "side": 1,
      "message": "Please review my new revision!!",
      "revId": "af25c882bdbe9c4c13f343272e6d28c05ad52dc7",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e7951d1_4703add5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002137
      },
      "writtenOn": "2024-09-03T04:34:21Z",
      "side": 1,
      "message": "PTAL",
      "revId": "af25c882bdbe9c4c13f343272e6d28c05ad52dc7",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46490c62_56b9ec51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002149
      },
      "writtenOn": "2024-09-03T15:08:48Z",
      "side": 1,
      "message": "I left some my answer, please review my comments. Thanks a lot!",
      "revId": "af25c882bdbe9c4c13f343272e6d28c05ad52dc7",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "449a0da3_fc8ff8e3",
        "filename": "config/env_loader.go",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1002137
      },
      "writtenOn": "2024-09-03T04:34:21Z",
      "side": 1,
      "message": "Which is the priority between `defaultData` and `envFilePath`?\nIf `defaultData` is high, please do the `defaultData` job and return the result before doing the `envFilePath` job.",
      "revId": "af25c882bdbe9c4c13f343272e6d28c05ad52dc7",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afc64b83_40346c58",
        "filename": "config/env_loader.go",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1002149
      },
      "writtenOn": "2024-09-03T15:08:48Z",
      "side": 1,
      "message": "- env priority\n1. system environment variable ex) `APP\u003dMODLE_APP`\n2. env file ex) `config.env`\n3. program env ex) `viper.SetDefault`\n\nThe viper.SetDefault(k, v) function does not set the value if the key already exists.",
      "parentUuid": "449a0da3_fc8ff8e3",
      "revId": "af25c882bdbe9c4c13f343272e6d28c05ad52dc7",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e48e9258_db8791f2",
        "filename": "config/env_loader.go",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1002137
      },
      "writtenOn": "2024-09-03T04:34:21Z",
      "side": 1,
      "message": "I think it is correct to terminate the modelmgmtservice with the error message rather than setting the default values.",
      "revId": "af25c882bdbe9c4c13f343272e6d28c05ad52dc7",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed8f19eb_0368f9b3",
        "filename": "config/env_loader.go",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1002149
      },
      "writtenOn": "2024-09-03T15:08:48Z",
      "side": 1,
      "message": "Got it. I will remove the function that sets default data. \n\nHowever, I\u0027d like to suggest adding a validation interface. In some production environments, certain environment variables are critical, but they may not be as necessary in test environments. Enforcing setting these variables could make it difficult to run tests, so having a validation interface might offer more flexibility.\n\nAdditionally, checking whether specific configuration values are set within functions like `dbDataLoad` or `appDataLoad` enforces strictness even in test code, which reduces the flexibility of the application.\n\nI want to provide flexibility to the application by injecting a configValidator dependency as follows\n```py\nfunc Load(validator configValidator, loaders ...configLoader) error {\n\tvar err error \u003d nil\n\tonce.Do(func() {\n\t\tfor _, loader :\u003d range loaders {\n\t\t\tloader.load(manager)\n\t\t}\n\t\terr \u003d validator.validate(manager)\n\t})\n\treturn err\n}\n```\n\nAlternatively, we could separate the validate logic into a standalone function rather than using a validate interface. This approach would separate the concerns of Load and Validate operations.\n\n```go\nconfig.Load(config.NewEnvDataLoader(nil))\nerr :\u003d config.Validate()\nif err !\u003d nil {\n    panic(err)\n}\n```",
      "parentUuid": "e48e9258_db8791f2",
      "revId": "af25c882bdbe9c4c13f343272e6d28c05ad52dc7",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7636cb83_ca9a585f",
        "filename": "config/env_loader.go",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1002137
      },
      "writtenOn": "2024-09-03T04:34:21Z",
      "side": 1,
      "message": "ditto",
      "revId": "af25c882bdbe9c4c13f343272e6d28c05ad52dc7",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5a64f35_95fea3f0",
        "filename": "config/env_loader.go",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1002149
      },
      "writtenOn": "2024-09-03T15:08:48Z",
      "side": 1,
      "message": "The answer is the same as #68",
      "parentUuid": "7636cb83_ca9a585f",
      "revId": "af25c882bdbe9c4c13f343272e6d28c05ad52dc7",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    }
  ]
}